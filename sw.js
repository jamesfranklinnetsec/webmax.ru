!function(){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e={"invalid-value":({paramName:e,validValueDescription:t,value:a})=>{if(!e||!t)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${e}' parameter was given a value with an `+`unexpected value. ${t} Received a value of `+`${JSON.stringify(a)}.`},"not-an-array":({moduleName:e,className:t,funcName:a,paramName:s})=>{if(!(e&&t&&a&&s))throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${s}' passed into `+`'${e}.${t}.${a}()' must be an array.`},"incorrect-type":({expectedType:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&r))throw new Error("Unexpected input to 'incorrect-type' error.");return`The parameter '${t}' passed into `+`'${a}.${s?s+".":""}`+`${r}()' must be of type ${e}.`},"incorrect-class":({expectedClass:e,paramName:t,moduleName:a,className:s,funcName:r,isReturnValueProblem:n})=>{if(!e||!a||!r)throw new Error("Unexpected input to 'incorrect-class' error.");return n?"The return value from "+`'${a}.${s?s+".":""}${r}()' `+`must be an instance of class ${e.name}.`:`The parameter '${t}' passed into `+`'${a}.${s?s+".":""}${r}()' `+`must be an instance of class ${e.name}.`},"missing-a-method":({expectedMethod:e,paramName:t,moduleName:a,className:s,funcName:r})=>{if(!(e&&t&&a&&s&&r))throw new Error("Unexpected input to 'missing-a-method' error.");return`${a}.${s}.${r}() expected the `+`'${t}' parameter to expose a '${e}' method.`},"add-to-cache-list-unexpected-type":({entry:e})=>"An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry "+`'${JSON.stringify(e)}' isn't supported. You must supply an array of `+"strings with one or more characters, objects with a url property or Request objects.","add-to-cache-list-conflicting-entries":({firstEntry:e,secondEntry:t})=>{if(!e||!t)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+`${e._entryId} but different revision details. Workbox is `+"unable to cache and version the asset correctly. Please remove one of the entries."},"plugin-error-request-will-fetch":({thrownError:e})=>{if(!e)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return"An error was thrown by a plugins 'requestWillFetch()' method. "+`The thrown error message was: '${e.message}'.`},"invalid-cache-name":({cacheNameId:e,value:t})=>{if(!e)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return"You must provide a name containing at least one character for "+`setCacheDetails({${e}: '...'}). Received a value of `+`'${JSON.stringify(t)}'`},"unregister-route-but-not-found-with-method":({method:e})=>{if(!e)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return"The route you're trying to unregister was not  previously "+`registered for the method type '${e}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:e})=>`Replaying the background sync queue '${e}' failed.`,"duplicate-queue-name":({name:e})=>`The Queue name '${e}' is already being used. `+"All instances of backgroundSync.Queue must be given unique names.","expired-test-without-max-age":({methodName:e,paramName:t})=>`The '${e}()' method can only be used when the `+`'${t}' is used in the constructor.`,"unsupported-route-type":({moduleName:e,className:t,funcName:a,paramName:s})=>`The supplied '${s}' parameter was an unsupported type. `+`Please check the docs for ${e}.${t}.${a} for `+"valid input types.","not-array-of-class":({value:e,expectedClass:t,moduleName:a,className:s,funcName:r,paramName:n})=>`The supplied '${n}' parameter must be an array of `+`'${t}' objects. Received '${JSON.stringify(e)},'. `+`Please check the call to ${a}.${s}.${r}() `+"to fix the issue.","max-entries-or-age-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.maxEntries or config.maxAgeSeconds"+`in ${e}.${t}.${a}`,"statuses-or-headers-required":({moduleName:e,className:t,funcName:a})=>"You must define either config.statuses or config.headers"+`in ${e}.${t}.${a}`,"invalid-string":({moduleName:e,funcName:t,paramName:a})=>{if(!a||!e||!t)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${a}' parameter must start with `+"'http' (for cross-origin matches) or '/' (for same-origin matches). "+`Please see the docs for ${e}.${t}() for `+"more info."},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return"The 'unit' portion of the Range header must be set to 'bytes'. "+`The Range header provided was "${e}"`},"single-range-only":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'single-range-only' error.");return"Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "+`"${e}"`},"invalid-range-values":({normalizedRangeHeader:e})=>{if(!e)throw new Error("Unexpected input to 'invalid-range-values' error.");return"The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "+`"${e}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:e,start:t,end:a})=>`The start (${t}) and end (${a}) values in the Range are `+`not satisfiable by the cached response, which is ${e} bytes.`,"attempt-to-cache-non-get-request":({url:e,method:t})=>`Unable to cache '${e}' because it is a '${t}' request and `+"only 'GET' requests can be cached.","cache-put-with-no-response":({url:e})=>`There was an attempt to cache '${e}' but the response was not `+"defined.","no-response":({url:e,error:t})=>{let a=`The strategy could not generate a response for '${e}'.`;return t&&(a+=` The underlying error is ${t}.`),a},"bad-precaching-response":({url:e,status:t})=>`The precaching request for '${e}' failed with an HTTP `+`status of ${t}.`,"non-precached-url":({url:e})=>`createHandlerBoundToURL('${e}') was called, but that URL is `+"not precached. Please pass in a URL that is precached instead.","add-to-cache-list-conflicting-integrities":({url:e})=>"Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL "+`${e} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:e,url:t})=>`Unable to find a precached response in ${e} for ${t}.`},t=(t,a={})=>{const s=e[t];if(!s)throw new Error(`Unable to find message for code '${t}'.`);return s(a)};class a extends Error{constructor(e,a){super(t(e,a)),this.name=e,this.details=a}}const s=(()=>{"__WB_DISABLE_DEV_LOGS"in self||(self.__WB_DISABLE_DEV_LOGS=!1);let e=!1;const t={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},a=function(a,s){if(self.__WB_DISABLE_DEV_LOGS)return;if("groupCollapsed"===a&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent))return void console[a](...s);const r=e?[]:["%cworkbox",[`background: ${t[a]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"].join(";")];console[a](...r,...s),"groupCollapsed"===a&&(e=!0),"groupEnd"===a&&(e=!1)},s={},r=Object.keys(t);for(const e of r){const t=e;s[t]=(...e)=>{a(t,e)}}return s})(),r=(e,t,s)=>{if("function"!==typeof e[t])throw s.expectedMethod=t,new a("missing-a-method",s)},n=(e,t)=>{if(!Array.isArray(e))throw new a("not-an-array",t)},o=(e,t,s)=>{if(!(e instanceof t))throw s.expectedClass=t,new a("incorrect-class",s)},i=(e,t,s)=>{if(!t.includes(e))throw s.validValueDescription=`Valid values are ${JSON.stringify(t)}.`,new a("invalid-value",s)},c=(e,t,s)=>{if(typeof e!==t)throw s.expectedType=t,new a("incorrect-type",s)},u=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class l{constructor(e,t,{onupgradeneeded:a,onversionchange:s}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=a,this._onversionchange=s||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let a=!1;setTimeout(()=>{a=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const s=indexedDB.open(this._name,this._version);s.onerror=()=>t(s.error),s.onupgradeneeded=e=>{a?(s.transaction.abort(),s.result.close()):"function"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)},s.onsuccess=()=>{const t=s.result;a?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,a){return await this.getAllMatching(e,{query:t,count:a})}async getAllKeys(e,t,a){return(await this.getAllMatching(e,{query:t,count:a,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:a=null,direction:s="next",count:r,includeKeys:n=!1}={}){return await this.transaction([e],"readonly",(o,i)=>{const c=o.objectStore(e),u=t?c.index(t):c,l=[],h=u.openCursor(a,s);h.onsuccess=()=>{const e=h.result;e?(l.push(n?e:e.value),r&&l.length>=r?i(l):e.continue()):i(l)}})}async transaction(e,t,a){return await this.open(),await new Promise((s,r)=>{const n=this._db.transaction(e,t);n.onabort=()=>r(n.error),n.oncomplete=()=>s(),a(n,e=>s(e))})}async _call(e,t,a,...s){return await this.transaction([t],a,(a,r)=>{const n=a.objectStore(t),o=n[e].apply(n,s);o.onsuccess=()=>r(o.result)})}close(){this._db&&(this._db.close(),this._db=null)}}l.prototype.OPEN_TIMEOUT=2e3;const h={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(h))for(const a of t)a in IDBObjectStore.prototype&&(l.prototype[a]=async function(t,...s){return await this._call(a,t,e,...s)});try{self["workbox:background-sync:5.1.3"]&&_()}catch(e){}class d{constructor(e){this._queueName=e,this._db=new l("workbox-background-sync",3,{onupgradeneeded:this._upgradeDb})}async pushEntry(e){c(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry"}),c(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry.requestData"}),delete e.id,e.queueName=this._queueName,await this._db.add("requests",e)}async unshiftEntry(e){c(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry"}),c(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry.requestData"});const[t]=await this._db.getAllMatching("requests",{count:1});t?e.id=t.id-1:delete e.id,e.queueName=this._queueName,await this._db.add("requests",e)}async popEntry(){return this._removeEntry({direction:"prev"})}async shiftEntry(){return this._removeEntry({direction:"next"})}async getAll(){return await this._db.getAllMatching("requests",{index:"queueName",query:IDBKeyRange.only(this._queueName)})}async deleteEntry(e){await this._db.delete("requests",e)}async _removeEntry({direction:e}){const[t]=await this._db.getAllMatching("requests",{direction:e,index:"queueName",query:IDBKeyRange.only(this._queueName),count:1});if(t)return await this.deleteEntry(t.id),t}_upgradeDb(e){const t=e.target.result;e.oldVersion>0&&e.oldVersion<3&&t.objectStoreNames.contains("requests")&&t.deleteObjectStore("requests"),t.createObjectStore("requests",{autoIncrement:!0,keyPath:"id"}).createIndex("queueName","queueName",{unique:!1})}}const m=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class p{constructor(e){c(e,"object",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData"}),c(e.url,"string",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData.url"}),"navigate"===e.mode&&(e.mode="same-origin"),this._requestData=e}static async fromRequest(e){const t={url:e.url,headers:{}};"GET"!==e.method&&(t.body=await e.clone().arrayBuffer());for(const[a,s]of e.headers.entries())t.headers[a]=s;for(const a of m)void 0!==e[a]&&(t[a]=e[a]);return new p(t)}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new p(this.toObject())}}const g=new Set,f=e=>{const t={request:new p(e.requestData).toRequest(),timestamp:e.timestamp};return e.metadata&&(t.metadata=e.metadata),t};class w{constructor(e,{onSync:t,maxRetentionTime:s}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,g.has(e))throw new a("duplicate-queue-name",{name:e});g.add(e),this._name=e,this._onSync=t||this.replayRequests,this._maxRetentionTime=s||10080,this._queueStore=new d(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){c(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry"}),o(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry.request"}),await this._addRequest(e,"push")}async unshiftRequest(e){c(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry"}),o(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry.request"}),await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),a=[];for(const s of e){const e=60*this._maxRetentionTime*1e3;t-s.timestamp>e?await this._queueStore.deleteEntry(s.id):a.push(f(s))}return a}async _addRequest({request:e,metadata:t,timestamp:a=Date.now()},r){const n={requestData:(await p.fromRequest(e.clone())).toObject(),timestamp:a};t&&(n.metadata=t),await this._queueStore[`${r}Entry`](n),s.log(`Request for '${u(e.url)}' has `+`been added to background sync queue '${this._name}'.`),this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now(),a=await this._queueStore[`${e}Entry`]();if(a){const s=60*this._maxRetentionTime*1e3;return t-a.timestamp>s?this._removeRequest(e):f(a)}}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone()),s.log(`Request for '${u(e.request.url)}'`+`has been replayed in queue '${this._name}'`)}catch(t){throw await this.unshiftRequest(e),s.log(`Request for '${u(e.request.url)}'`+`failed to replay, putting it back in queue '${this._name}'`),new a("queue-replay-failed",{name:this._name})}s.log(`All requests in queue '${this.name}' have successfully `+"replayed; the queue is now empty!")}async registerSync(){if("sync"in self.registration)try{await self.registration.sync.register(`workbox-background-sync:${this._name}`)}catch(e){s.warn(`Unable to register sync event for '${this._name}'.`,e)}}_addSyncListener(){"sync"in self.registration?self.addEventListener("sync",e=>{if(e.tag===`workbox-background-sync:${this._name}`){s.log(`Background sync for tag '${e.tag}'`+"has been received");const t=async()=>{let t;this._syncInProgress=!0;try{await this._onSync({queue:this})}catch(e){throw t=e,t}finally{!this._requestsAddedDuringSync||t&&!e.lastChance||await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):(s.log("Background sync replaying without background sync event"),this._onSync({queue:this}))}static get _queueNames(){return g}}class y{constructor(e,t){this.fetchDidFail=async({request:e})=>{await this._queue.pushRequest({request:e})},this._queue=new w(e,t)}}const b={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},N=e=>[b.prefix,e,b.suffix].filter(e=>e&&e.length>0).join("-"),v=e=>e||N(b.googleAnalytics),q=e=>e||N(b.precache),x=e=>e||N(b.runtime);try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const R=["DELETE","GET","HEAD","PATCH","POST","PUT"],k=e=>e&&"object"==typeof e?(r(e,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),e):(c(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:e});class E{constructor(e,t,a="GET"){c(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),a&&i(a,R,{paramName:"method"}),this.handler=k(t),this.match=e,this.method=a}}class ${constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,a=this.handleRequest({request:t,event:e});a&&e.respondWith(a)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;s.debug("Caching URLs from the window",t.urlsToCache);const a=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(a),e.ports&&e.ports[0]&&a.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){o(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return void s.debug("Workbox Router only supports URLs that start with 'http'.");const{params:r,route:n}=this.findMatchingRoute({url:a,request:e,event:t});let i=n&&n.handler;const c=[];if(i&&(c.push(["Found a route to handle this request:",n]),r&&c.push(["Passing the following params to the route's handler:",r])),!i&&this._defaultHandler&&(c.push("Failed to find a matching route. Falling back to the default handler."),i=this._defaultHandler),!i)return void s.debug(`No route found for: ${u(a)}`);let l;s.groupCollapsed(`Router is responding to: ${u(a)}`),c.forEach(e=>{Array.isArray(e)?s.log(...e):s.log(e)}),s.groupEnd();try{l=i.handle({url:a,request:e,event:t,params:r})}catch(e){l=Promise.reject(e)}return l instanceof Promise&&this._catchHandler&&(l=l.catch(r=>(s.groupCollapsed("Error thrown when responding to: "+` ${u(a)}. Falling back to Catch Handler.`),s.error("Error thrown by:",n),s.error(r),s.groupEnd(),this._catchHandler.handle({url:a,request:e,event:t})))),l}findMatchingRoute({url:e,request:t,event:a}){o(e,URL,{moduleName:"workbox-routing",className:"Router",funcName:"findMatchingRoute",paramName:"options.url"}),o(t,Request,{moduleName:"workbox-routing",className:"Router",funcName:"findMatchingRoute",paramName:"options.request"});const s=this._routes.get(t.method)||[];for(const r of s){let s;const n=r.match({url:e,request:t,event:a});if(n)return s=n,(Array.isArray(n)&&0===n.length||n.constructor===Object&&0===Object.keys(n).length||"boolean"==typeof n)&&(s=void 0),{route:r,params:s}}return{}}setDefaultHandler(e){this._defaultHandler=k(e)}setCatchHandler(e){this._catchHandler=k(e)}registerRoute(e){c(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),r(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),c(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),r(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),c(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new a("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new a("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}const T=new Set;const U=(e,t)=>e.filter(e=>t in e),S=async({request:e,mode:t,plugins:a=[]})=>{const s=U(a,"cacheKeyWillBeUsed");let r=e;for(const e of s)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r)),o(r,Request,{moduleName:"Plugin",funcName:"cacheKeyWillBeUsed",isReturnValueProblem:!0});return r},C=async({cacheName:e,request:t,event:a,matchOptions:r,plugins:n=[]})=>{const i=await self.caches.open(e),c=await S({plugins:n,request:t,mode:"read"});let u=await i.match(c,r);u?s.debug(`Found a cached response in '${e}'.`):s.debug(`No cached response found in '${e}'.`);for(const t of n)if("cachedResponseWillBeUsed"in t){const s=t.cachedResponseWillBeUsed;u=await s.call(t,{cacheName:e,event:a,matchOptions:r,cachedResponse:u,request:c}),u&&o(u,Response,{moduleName:"Plugin",funcName:"cachedResponseWillBeUsed",isReturnValueProblem:!0})}return u},L=async({cacheName:e,request:t,response:r,event:n,plugins:i=[],matchOptions:c})=>{if(t.method&&"GET"!==t.method)throw new a("attempt-to-cache-non-get-request",{url:u(t.url),method:t.method});const l=await S({plugins:i,request:t,mode:"write"});if(!r)throw s.error("Cannot cache non-existent response for "+`'${u(l.url)}'.`),new a("cache-put-with-no-response",{url:u(l.url)});const h=await(async({request:e,response:t,event:a,plugins:r=[]})=>{let n=t,i=!1;for(const t of r)if("cacheWillUpdate"in t){i=!0;const s=t.cacheWillUpdate;if(n=await s.call(t,{request:e,response:n,event:a}),n&&o(n,Response,{moduleName:"Plugin",funcName:"cacheWillUpdate",isReturnValueProblem:!0}),!n)break}return i||(n&&200!==n.status&&(0===n.status?s.warn(`The response for '${e.url}' is an opaque `+"response. The caching strategy that you're using will not cache opaque responses by default."):s.debug(`The response for '${e.url}' returned `+`a status code of '${t.status}' and won't be cached as a `+"result.")),n=n&&200===n.status?n:void 0),n||null})({event:n,plugins:i,response:r,request:l});if(!h)return void s.debug(`Response '${u(l.url)}' will `+"not be cached.",h);const d=await self.caches.open(e),m=U(i,"cacheDidUpdate"),p=m.length>0?await C({cacheName:e,matchOptions:c,request:l}):null;s.debug(`Updating the '${e}' cache with a new Response for `+`${u(l.url)}.`);try{await d.put(l,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){s.log(`About to run ${T.size} `+"callbacks to clean up caches.");for(const e of T)await e(),s.log(e,"is complete.");s.log("Finished running callbacks.")}(),e}for(const t of m)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:p,newResponse:h,request:l})},P=C,A=async({request:e,fetchOptions:t,event:r,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),r instanceof FetchEvent&&r.preloadResponse){const t=await r.preloadResponse;if(t)return s.log("Using a preloaded navigation response for "+`'${u(e.url)}'`),t}o(e,Request,{paramName:"request",expectedClass:Request,moduleName:"workbox-core",className:"fetchWrapper",funcName:"wrappedFetch"});const i=U(n,"fetchDidFail"),c=i.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const a=t.requestWillFetch,s=e.clone();(e=await a.call(t,{request:s,event:r}))&&o(e,Request,{moduleName:"Plugin",funcName:"cachedResponseWillBeUsed",isReturnValueProblem:!0})}}catch(e){throw new a("plugin-error-request-will-fetch",{thrownError:e})}const l=e.clone();try{let a;a="navigate"===e.mode?await fetch(e):await fetch(e,t),s.debug("Network request for "+`'${u(e.url)}' returned a response with `+`status '${a.status}'.`);for(const e of n)"fetchDidSucceed"in e&&(a=await e.fetchDidSucceed.call(e,{event:r,request:l,response:a}),a&&o(a,Response,{moduleName:"Plugin",funcName:"fetchDidSucceed",isReturnValueProblem:!0}));return a}catch(t){s.error("Network request for "+`'${u(e.url)}' threw an error.`,t);for(const e of i)await e.fetchDidFail.call(e,{error:t,event:r,originalRequest:c.clone(),request:l.clone()});throw t}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}const O=(e,t)=>`Using ${e} to respond to '${u(t.url)}'`,D=e=>{e&&(s.groupCollapsed("View the final response here."),s.log(e||"[No response returned]"),s.groupEnd())},j={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class W{constructor(e={}){if(this._cacheName=x(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[j,...e.plugins]}else this._plugins=[j];this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._networkTimeoutSeconds&&c(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:"NetworkFirst",funcName:"constructor",paramName:"networkTimeoutSeconds"}),this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:t}){const r=[];"string"==typeof t&&(t=new Request(t)),o(t,Request,{moduleName:"workbox-strategies",className:"NetworkFirst",funcName:"handle",paramName:"makeRequest"});const n=[];let i;if(this._networkTimeoutSeconds){const{id:a,promise:s}=this._getTimeoutPromise({request:t,event:e,logs:r});i=a,n.push(s)}const c=this._getNetworkPromise({timeoutId:i,request:t,event:e,logs:r});n.push(c);let u=await Promise.race(n);u||(u=await c),s.groupCollapsed(O("NetworkFirst",t));for(const e of r)s.log(e);if(D(u),s.groupEnd(),!u)throw new a("no-response",{url:t.url});return u}_getTimeoutPromise({request:e,logs:t,event:a}){let s;return{promise:new Promise(r=>{s=setTimeout(async()=>{t.push("Timing out the network response at "+`${this._networkTimeoutSeconds} seconds.`),r(await this._respondFromCache({request:e,event:a}))},1e3*this._networkTimeoutSeconds)}),id:s}}async _getNetworkPromise({timeoutId:e,request:t,logs:a,event:r}){let n,o;try{o=await A({request:t,event:r,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){n=e}if(e&&clearTimeout(e),o?a.push("Got response from network."):a.push("Unable to get a response from the network. Will respond with a cached response."),n||!o)o=await this._respondFromCache({request:t,event:r}),o?a.push(`Found a cached response in the '${this._cacheName}'`+" cache."):a.push(`No response found in the '${this._cacheName}' cache.`);else{const e=o.clone(),a=L({cacheName:this._cacheName,request:t,response:e,event:r,plugins:this._plugins});if(r)try{r.waitUntil(a)}catch(e){s.warn("Unable to ensure service worker stays alive when "+`updating cache for '${u(t.url)}'.`)}}return o}_respondFromCache({event:e,request:t}){return P({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}class M{constructor(e={}){this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions}async handle({event:e,request:t}){let r,n;"string"==typeof t&&(t=new Request(t)),o(t,Request,{moduleName:"workbox-strategies",className:"NetworkOnly",funcName:"handle",paramName:"request"});try{n=await A({request:t,event:e,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){r=e}if(s.groupCollapsed(O("NetworkOnly",t)),n?s.log("Got response from network."):s.log("Unable to get a response from the network."),D(n),s.groupEnd(),!n)throw new a("no-response",{url:t.url,error:r});return n}}try{self["workbox:google-analytics:5.1.3"]&&_()}catch(e){}const K=/^\/(\w+\/)?collect/,I=e=>{const t=({url:e})=>"www.google-analytics.com"===e.hostname&&K.test(e.pathname),a=new M({plugins:[e]});return[new E(t,a,"GET"),new E(t,a,"POST")]},F=e=>{const t=new W({cacheName:e});return new E(({url:e})=>"www.google-analytics.com"===e.hostname&&"/analytics.js"===e.pathname,t,"GET")},B=e=>{const t=new W({cacheName:e});return new E(({url:e})=>"www.googletagmanager.com"===e.hostname&&"/gtag/js"===e.pathname,t,"GET")},H=e=>{const t=new W({cacheName:e});return new E(({url:e})=>"www.googletagmanager.com"===e.hostname&&"/gtm.js"===e.pathname,t,"GET")};try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}const V=[],Q={get:()=>V,add(e){V.push(...e)}};let G;async function z(e,t){const a=e.clone(),s={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=t?t(s):s,n=function(){if(void 0===G){const e=new Response("");if("body"in e)try{new Response(e.body),G=!0}catch(e){G=!1}G=!1}return G}()?a.body:await a.blob();return new Response(n,r)}function Y(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(s,location.href),n=new URL(s,location.href);return r.searchParams.set("__WB_REVISION__",t),{cacheKey:r.href,url:n.href}}function Z(e){const t=e.length;t>0&&(s.groupCollapsed("During precaching cleanup, "+`${t} cached `+`request${1===t?" was":"s were"} deleted.`),((e,t)=>{s.groupCollapsed(e);for(const e of t)s.log(e);s.groupEnd()})("Deleted Cache Requests",e),s.groupEnd())}function J(e,t){if(0!==t.length){s.groupCollapsed(e);for(const e of t)s.log(e);s.groupEnd()}}class X{constructor(e){this._cacheName=q(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){n(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const r of e){"string"==typeof r?t.push(r):r&&void 0===r.revision&&t.push(r.url);const{cacheKey:e,url:n}=Y(r),o="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new a("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,r.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,o),t.length>0){const e="Workbox is precaching URLs without revision "+`info: ${t.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";s.warn(e)}}}async install({event:e,plugins:t}={}){t&&n(t,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"install",paramName:"plugins"});const a=[],r=[],o=await self.caches.open(this._cacheName),i=await o.keys(),c=new Set(i.map(e=>e.url));for(const[e,t]of this._urlsToCacheKeys)c.has(t)?r.push(e):a.push({cacheKey:t,url:e});const u=a.map(({cacheKey:a,url:s})=>{const r=this._cacheKeysToIntegrities.get(a),n=this._urlsToCacheModes.get(s);return this._addURLToCache({cacheKey:a,cacheMode:n,event:e,integrity:r,plugins:t,url:s})});await Promise.all(u);const l=a.map(e=>e.url);return function(e,t){const a=e.length,r=t.length;if(a||r){let n=`Precaching ${a} file${1===a?"":"s"}.`;r>0&&(n+=` ${r} `+`file${1===r?" is":"s are"} already cached.`),s.groupCollapsed(n),J("View newly precached URLs.",e),J("View previously precached URLs.",t),s.groupEnd()}}(l,r),{updatedURLs:l,notUpdatedURLs:r}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),a=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)a.has(r.url)||(await e.delete(r),s.push(r.url));return Z(s),{deletedURLs:s}}async _addURLToCache({cacheKey:e,url:t,cacheMode:s,event:r,plugins:n,integrity:o}){const i=new Request(t,{integrity:o,cache:s,credentials:"same-origin"});let c,u=await A({event:r,plugins:n,request:i});for(const e of n||[])"cacheWillUpdate"in e&&(c=e);if(!(c?await c.cacheWillUpdate({event:r,request:i,response:u}):u.status<400))throw new a("bad-precaching-response",{url:t,status:u.status});u.redirected&&(u=await z(u)),await L({event:r,plugins:n,response:u,request:e===t?i:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,a=this.getCacheKeyForURL(t);if(a){return(await self.caches.open(this._cacheName)).match(a)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new a("missing-precache-entry",{cacheName:this._cacheName,url:t instanceof Request?t.url:t})}catch(a){if(e)return s.debug("Unable to respond with precached response. Falling back to network.",a),fetch(t);throw a}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new a("non-precached-url",{url:e});const s=this.createHandler(t),r=new Request(e);return()=>s({request:r})}}let ee;const te=()=>(ee||(ee=new X),ee);const ae=(e,t)=>{const a=te().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:a,cleanURLs:s,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const a of[...e.searchParams.keys()])t.some(e=>e.test(a))&&e.searchParams.delete(a);return e}(n,t);if(yield o.href,a&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=a,yield e.href}if(s){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(e,t)){const e=a.get(s);if(e)return e}};let se=!1;function re(e){se||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:a=!0,urlManipulation:r}={})=>{const n=q();self.addEventListener("fetch",o=>{const i=ae(o.request.url,{cleanURLs:a,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:r});if(!i)return void s.debug("Precaching did not find a match for "+u(o.request.url));let c=self.caches.open(n).then(e=>e.match(i)).then(e=>e||(s.warn("The precached response for "+`${u(i)} in ${n} was not found. `+"Falling back to the network instead."),fetch(i)));c=c.then(e=>(s.groupCollapsed("Precaching is responding to: "+u(o.request.url)),s.log(`Serving the precached url: ${i}`),s.groupCollapsed("View request details here."),s.log(o.request),s.groupEnd(),s.groupCollapsed("View response details here."),s.log(e),s.groupEnd(),s.groupEnd(),e)),o.respondWith(c)})})(e),se=!0)}const ne=e=>{const t=te(),a=Q.get();e.waitUntil(t.install({event:e,plugins:a}).catch(e=>{throw s.error("Service worker installation failed. It will be retried automatically during the next navigation."),e}))},oe=e=>{const t=te();e.waitUntil(t.activate())};class ie extends E{constructor(e,t,a){o(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});super(({url:t})=>{const a=e.exec(t.href);if(a){if(t.origin===location.origin||0===a.index)return a.slice(1);s.debug(`The regular expression '${e}' only partially matched `+`against the cross-origin URL '${t}'. RegExpRoute's will only `+"handle cross-origin requests if they match the entire URL.")}},t,a)}}let ce;const ue=()=>(ce||(ce=new $,ce.addFetchListener(),ce.addCacheListener()),ce);function le(e){e.then(()=>{})}try{self["workbox:expiration:5.1.3"]&&_()}catch(e){}const he=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class de{constructor(e){this._cacheName=e,this._db=new l("workbox-expiration",1,{onupgradeneeded:e=>this._handleUpgrade(e)})}_handleUpgrade(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,a)=>{const s=indexedDB.deleteDatabase(e);s.onerror=()=>{a(s.error)},s.onblocked=()=>{a(new Error("Delete blocked"))},s.onsuccess=()=>{t()}})})(this._cacheName)}async setTimestamp(e,t){const a={url:e=he(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)};await this._db.put("cache-entries",a)}async getTimestamp(e){return(await this._db.get("cache-entries",this._getId(e))).timestamp}async expireEntries(e,t){const a=await this._db.transaction("cache-entries","readwrite",(a,s)=>{const r=a.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),n=[];let o=0;r.onsuccess=()=>{const a=r.result;if(a){const s=a.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&o>=t?n.push(a.value):o++),a.continue()}else s(n)}}),s=[];for(const e of a)await this._db.delete("cache-entries",e.id),s.push(e.url);return s}_getId(e){return this._cacheName+"|"+he(e)}}class me{constructor(e,t={}){if(this._isRunning=!1,this._rerunRequested=!1,c(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"cacheName"}),!t.maxEntries&&!t.maxAgeSeconds)throw new a("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor"});t.maxEntries&&c(t.maxEntries,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxEntries"}),t.maxAgeSeconds&&c(t.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxAgeSeconds"}),this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._cacheName=e,this._timestampModel=new de(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),a=await self.caches.open(this._cacheName);for(const e of t)await a.delete(e);t.length>0?(s.groupCollapsed(`Expired ${t.length} `+`${1===t.length?"entry":"entries"} and removed `+`${1===t.length?"it":"them"} from the `+`'${this._cacheName}' cache.`),s.log(`Expired the following ${1===t.length?"URL":"URLs"}:`),t.forEach(e=>s.log(`    ${e}`)),s.groupEnd()):s.debug("Cache expiration ran and found no entries to remove."),this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,le(this.expireEntries()))}async updateTimestamp(e){c(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"updateTimestamp",paramName:"url"}),await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){return await this._timestampModel.getTimestamp(e)<Date.now()-1e3*this._maxAgeSeconds}throw new a("expired-test-without-max-age",{methodName:"isURLExpired",paramName:"maxAgeSeconds"})}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}var pe;((e={})=>{const t=v(e.cacheName),a=new y("workbox-google-analytics",{maxRetentionTime:2880,onSync:(r=e,async({queue:e})=>{let t;for(;t=await e.shiftRequest();){const{request:a,timestamp:n}=t,o=new URL(a.url);try{const e="POST"===a.method?new URLSearchParams(await a.clone().text()):o.searchParams,t=n-(Number(e.get("qt"))||0),i=Date.now()-t;if(e.set("qt",String(i)),r.parameterOverrides)for(const t of Object.keys(r.parameterOverrides)){const a=r.parameterOverrides[t];e.set(t,a)}"function"==typeof r.hitFilter&&r.hitFilter.call(null,e),await fetch(new Request(o.origin+o.pathname,{body:e.toString(),method:"POST",mode:"cors",credentials:"omit",headers:{"Content-Type":"text/plain"}})),s.log(`Request for '${u(o.href)}'`+"has been replayed")}catch(a){throw await e.unshiftRequest(t),s.log(`Request for '${u(o.href)}'`+"failed to replay, putting it back in the queue."),a}}s.log("All Google Analytics request successfully replayed; the queue is now empty!")})});var r;const n=[H(t),F(t),B(t),...I(a)],o=new $;for(const e of n)o.registerRoute(e);o.addFetchListener()})(),self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",()=>self.clients.claim()),pe={urlManipulation:({url:e})=>[e],ignoreURLParametersMatching:[/.*/]},function(e){te().addToCacheList(e),e.length>0&&(self.addEventListener("install",ne),self.addEventListener("activate",oe))}([{revision:"67f8f37cad4f37667e787ec09ac8df63",url:"blog/background-fetch/index.html"},{revision:"b38fad07ba8a30573b0f0af282321719",url:"blog/kode24-interview/index.html"},{revision:"e75fcd5f8fa12012ddadebadcbb673e3",url:"blog/kode24/index.html"},{revision:"cf329768367d23e7f5010efc6ea85b92",url:"blog/workbox-window/index.html"},{revision:"35f7ac8c40483937a9fc0645daa614cd",url:"assets/blog/1__jfyZdcctc2NqCR32_hBtg.png"},{revision:"0a27feefb8ea6746d305df8d1c867ae6",url:"assets/blog/1_bqi7gem3j5e5OlfMtht0PQ.gif"},{revision:"3e35bf4e0f2e44790f1f361fd3264648",url:"assets/blog/1_E8YUcIMi4aQ6MM3ZR7P4dw.png"},{revision:"d2947cc4aba7e744b26a046104122304",url:"assets/blog/1_EYoDOamIjretIZ_SVylAZA.png"},{revision:"9d684c6c7c39b6ca5da2d0138b8ffd34",url:"assets/blog/1_fvIWzpTlayP1vcp-zS64Qg.png"},{revision:"ec43d09e87268b9f1a65689cef78a8f0",url:"assets/blog/1_lz4s8_nwI1wjeaihfrMvZg.gif"},{revision:"cd392dd58ea6d54d4178e2106d1c6907",url:"assets/blog/1_QiiKy6y6RBYeO4X9YXkztQ.gif"},{revision:"c2cd8f2670168fe72b0af80f3bcfa7fc",url:"assets/blog/1_tsdEZ2glcpn53pk2jgAuWA.png"},{revision:"70492cca2c76478648371ab21aaf9e7a",url:"assets/blog/1_u7xnX7TfQ95z11FHpwB51g.png"},{revision:"fb91de4d802abacc8814dcd7939b917a",url:"assets/blog/1_VE-o1EzCCB5xp2iqvh6RBg.gif"},{revision:"2030db3aa7e17c2110bea48115e049b6",url:"assets/blog/1_YD12Vh1zTvbki3UEMXlmKA.png"},{revision:"8814b5a9bff435bb649fe154d4c34992",url:"assets/blog/1_ygTj-yRzpOuqzjX5V75Fgg.png"},{revision:"a0d6321f0a6fb07977a5ce6a2be19f50",url:"assets/blog/maxim-salnikov-me.jpg"},{revision:"744e071b93b93d3c94da6e4b264c0871",url:"assets/blog/maxim-salnikov-recording.jpg"},{revision:"f30c02ec3a73ade49d5bec1a445689a2",url:"assets/blog/maxim-salnikov-workplace.jpg"},{revision:"d7acf8c47dc83b96907394e06bf4a7e1",url:"assets/images/background-fetch.gif"},{revision:"5e1d195a92658cd76cd3a29abee878a1",url:"assets/images/maxim-salnikov.jpg"},{revision:"34082d7f1b76de82daafdb7eda03e3ab",url:"assets/images/pwa-slack.png"},{revision:"33c3a22c05e810d2bb622d7edb27908a",url:"assets/images/pwa.png"},{revision:"5096c78059b83452a1d4ee3f76418fb5",url:"assets/images/workbox-window.png"},{revision:"4bdb87cc0cd1b0c6c2509f305e222ab5",url:"assets/scully-routes.json"},{revision:"437847146aaae2555a0b49ac15c78356",url:"manifest/android-chrome-192x192.png"},{revision:"7dd23c463d71b5b4e574039e50feb26e",url:"manifest/android-chrome-512x512.png"},{revision:"5ac0d0385f98ce974d7f453cc999d6c5",url:"manifest/apple-touch-icon.png"},{revision:"a493ba0aa0b8ec8068d786d7248bb92c",url:"manifest/browserconfig.xml"},{revision:"032715625734ab010c6f5da553ce15f4",url:"manifest/favicon-16x16.png"},{revision:"d52fda27691c5ea6028f192195e6880e",url:"manifest/favicon-32x32.png"},{revision:"53502601d3651378764cb95af85d2780",url:"manifest/favicon.ico"},{revision:"3f6ebfec930404f46957bc7347933099",url:"manifest/mstile-150x150.png"},{revision:"a35cc4a6d4a75b4b84d012feaace3ec0",url:"manifest/site.webmanifest"},{revision:"a0f54890b77948e6fd5418cd8f1f5e08",url:"404.html"},{revision:"4fa00fbfcdbc004a7c9888995f35a13e",url:"index.html"},{revision:"138758b4e49c6d8e56a3a10f5db73f4a",url:"bg.jpg"},{revision:"674f50d287a8c48dc19ba404d20fe713",url:"fontawesome-webfont.eot"},{revision:"912ec66d7572ff821749319396470bde",url:"fontawesome-webfont.svg"},{revision:"b06871f281fee6b241d60582ae9369b9",url:"fontawesome-webfont.ttf"},{revision:"fee66e712a8a08eef5805a46892932ad",url:"fontawesome-webfont.woff"},{revision:"af7ae505a9eed503f8b8e6982036873e",url:"fontawesome-webfont.woff2"},{revision:"aff0992faef6ad79b50ec21e2225a881",url:"overlay.png"}]),re(pe),function(e,t,r){let n;if("string"==typeof e){const o=new URL(e,location.href);{if(!e.startsWith("/")&&!e.startsWith("http"))throw new a("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const t=e.startsWith("http")?o.pathname:e,r="[*:?+]";new RegExp(`${r}`).exec(t)&&s.debug("The '$capture' parameter contains an Express-style wildcard "+`character (${r}). Strings are now always interpreted as `+"exact matches; use a RegExp for partial or wildcard matches.")}n=new E(({url:t})=>(t.pathname===o.pathname&&t.origin!==o.origin&&s.debug(`${e} only partially matches the cross-origin URL `+`${t}. This route will only handle cross-origin requests `+"if they match the entire URL."),t.href===o.href),t,r)}else if(e instanceof RegExp)n=new ie(e,t,r);else if("function"==typeof e)n=new E(e,t,r);else{if(!(e instanceof E))throw new a("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}ue().registerRoute(n)}(new RegExp("https://fonts.(?:googleapis|gstatic).com/(.*)"),new class{constructor(e={}){if(this._cacheName=x(e.cacheName),this._plugins=e.plugins||[],e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[j,...e.plugins]}else this._plugins=[j];this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:e,request:t}){const r=[];"string"==typeof t&&(t=new Request(t)),o(t,Request,{moduleName:"workbox-strategies",className:"StaleWhileRevalidate",funcName:"handle",paramName:"request"});const n=this._getFromNetwork({request:t,event:e});let i,c=await P({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(c){if(r.push(`Found a cached response in the '${this._cacheName}'`+" cache. Will update with the network response in the background."),e)try{e.waitUntil(n)}catch(i){s.warn("Unable to ensure service worker stays alive when "+`updating cache for '${u(t.url)}'.`)}}else{r.push(`No response found in the '${this._cacheName}' cache. `+"Will wait for the network response.");try{c=await n}catch(e){i=e}}s.groupCollapsed(O("StaleWhileRevalidate",t));for(const e of r)s.log(e);if(D(c),s.groupEnd(),!c)throw new a("no-response",{url:t.url,error:i});return c}async _getFromNetwork({request:e,event:t}){const a=await A({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),r=L({cacheName:this._cacheName,request:e,response:a.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(r)}catch(t){s.warn("Unable to ensure service worker stays alive when "+`updating cache for '${u(e.url)}'.`)}return a}}({cacheName:"googleapis",plugins:[new class{constructor(e={}){if(this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:a,cachedResponse:r})=>{if(!r)return null;const n=this._isResponseDateFresh(r),o=this._getCacheExpiration(a);le(o.expireEntries());const i=o.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(t){"request"in e&&s.warn("Unable to ensure service worker stays alive when updating cache entry for "+`'${u(e.request.url)}'.`)}return n?r:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{c(e,"string",{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),o(t,Request,{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"});const a=this._getCacheExpiration(e);await a.updateTimestamp(t.url),await a.expireEntries()},!e.maxEntries&&!e.maxAgeSeconds)throw new a("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor"});var t;e.maxEntries&&c(e.maxEntries,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxEntries"}),e.maxAgeSeconds&&c(e.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxAgeSeconds"}),this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(c(t=()=>this.deleteCacheAndMetadata(),"function",{moduleName:"workbox-core",funcName:"register",paramName:"callback"}),T.add(t),s.log("Registered a callback to respond to quota errors.",t))}_getCacheExpiration(e){if(e===x())throw new a("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new me(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),a=new Date(t).getTime();return isNaN(a)?null:a}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}({maxEntries:30})]})),self.addEventListener("push",(function(e){console.log("[Service Worker]: Received push event",e);var t={};t=e.data.json()?e.data.json().notification:{title:"Something Has Happened",message:"Something you might want to check out",icon:"/assets/images/logo.png"},self.registration.showNotification(t.title,t)})),self.addEventListener("notificationclick",(function(e){console.log("[Service Worker]: Received notificationclick event"),e.notification.close(),"opentweet"==e.action?(console.log("[Service Worker]: Performing action opentweet"),e.waitUntil(clients.openWindow(e.notification.data).then((function(e){})))):(console.log("[Service Worker]: Performing default click action"),e.waitUntil(clients.matchAll({includeUncontrolled:!0,type:"window"}).then((function(e){for(var t=0;t<e.length;t++){var a=e[t];if("/"==a.url&&"focus"in a)return a.focus()}if(clients.openWindow)return clients.openWindow("/")}))))})),self.addEventListener("notificationclose",(function(e){log("[Service Worker]: Received notificationclose event")}))}();
